{"name":"Tinyos","tagline":"Proyectos y prácticas con tinyOS para TelosB","body":"# tinyOS\r\nProyectos y prácticas con tinyOS para TelosB como parte de la asignatura \"Redes de Sensores y Sistemas Autónomos\"\r\n\r\n## Contenido\r\n* [Instalación](#instalación)\r\n* [Uso](#uso)\r\n\r\n## Instalación\r\n\r\nAñadimos dos repositorios donde se encuentran los paquetes necesarios. Para ello creamos el fichero /etc/apt/sources.list.d/tinyprod-debian.list y lo abrimos con cualquier editor `sudo vim /etc/apt/sources.list.d/tinyprod-debian.list` añadiendo las siguientes líneas:\r\n\r\n```\r\ndeb\thttp://tinyprod.net/repos/debian\tsqueeze\t\tmain\r\ndeb\thttp://tinyprod.net/repos/debian \tmsp430-46\tmain\r\n```\r\n\r\nInstalamos la clave de seguridad del repositorio:\r\n\r\n```\r\ngpg\t--keyserver\tkeyserver.ubuntu.com\t--recv-keys\t34EC655A\r\ngpg\t-a\t--export\t34EC655A\t|\tsudo\tapt-key\tadd\t-\r\n```\r\nDebe mostrar el mensaje 'OK' al finalizar. A veces es necesario cerrar y volver a abrir la terminal tras el paso anterior.\r\n\r\nActualizamos los repositorios e instalamos los paquetes necesarios:\r\n```\r\nsudo\tapt-get\tupdate\r\nsudo\tapt-get\tinstall\tnesc\ttinyos-tools\tmsp430-46\tavr-tinyos\r\n```\r\n\r\nDescargamos TinyOS en el directorio que queramos, por ejemplo en /home/user/:\r\n```\r\ncd /home/user/\r\nwget http://github.com/tinyos/tinyos-release/archive/tinyos-2_1_2.tar.gz\r\ntar\txf\ttinyos-2_1_2.tar.gz\r\nmv\ttinyos-release-tinyos-2_1_2\ttinyos-main\r\nrm -rf tinyos-2_1_2.tar.gz\r\n```\r\nDe esta manera tenemos el directorio /home/user/tinyos-main con todo lo necesario.\r\n\r\nConfiguramos el entorno\r\n```\r\nexport\tTOSROOT=\"/home/user/tinyos-main\"\r\nexport\tTOSDIR=\"$TOSROOT/tos\"\r\nexport CLASSPATH=$CLASSPATH:$TOSROOT/support/sdk/java/tinyos.jar:.\r\nexport\tMAKERULES=\"$TOSROOT/support/make/Makerules\"\r\nexport\tPYTHONPATH=$PYTHONPATH:$TOSROOT/support/sdk/python\r\n\r\necho\t\"setting\tup\tTinyOS\tsource\tpath\tto\t$TOSROOT\"\r\n```\r\n\r\nPara ello añadir lo anterior (modificando lo necesario) en el fichero .bashrc\r\n```\r\nlocate .bashrc\r\nvim /home/user/.bashrc\r\n```\r\n\r\nConviene cerrar y volver a abrir la terminal en este punto.\r\n\r\nPara obtener acceso al puerto serie: `sudo gpasswd -a <your user> dialout`. Tras esto hay que cerrar sesión de Ubuntu y volver a entrar para que haga efecto.\r\n\r\nPara comprobar la instalación ejecutamos el siguiente comando: `tos-check-env`. Si todo ha ido bien deberán aparecer únicamente dos warnings, uno debido a la versión de Java y otro a la de graphviz, debido a que generalmente la versión instalada es superior a la requerida por TinyOS.\r\n\r\n## Uso\r\nPara hacer una prueba de funcionamiento nos situamos en el directorio /home/user/tinyos-main/apps/tutorials/BlinkFail, compilamos y cargamos este programa en un dispositivo TelosB previamente conectado.\r\n\r\nPrimero comprobamos que el dispositivo es reconocido correctamente: `motelist`\r\n\r\nPor último, compilamos y cargamos el ejemplo BlinkFail en el dispositivo:\r\n```\r\ncd /home/user/tinyos-main/apps/tutorials/BlinkFail\r\nmake telosb install,ID\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}